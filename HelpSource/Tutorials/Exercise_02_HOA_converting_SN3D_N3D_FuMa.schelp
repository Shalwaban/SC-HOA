title:: HOA Tutorial Exercise 02
summary:: Converting between N3D, SN3D, MaxN and ACN and FuMa.
categories:: Libraries>HOA
related:: Guides/HOAguide, Tutorials/HOA_Tutorial_Overview

In order to correctly reconstruct a sound field from the channels of the B-format, it is important to know about standard normalisation methods for the spherical harmonic components, as well as channel ordering conventions. Two main channel ordering conventions exist:

definitionlist::
     ## FuMa
|| The original Furse-Malham higher-order format, an extension of traditional second order B-format up to third order (16 channels). See: link:: https://en.wikipedia.org/wiki/Ambisonic_data_exchange_formats#Furse-Malham::.
FuMa channel ordering comes with maxN normalization.
See: link:: https://en.wikipedia.org/wiki/Ambisonic_data_exchange_formats#maxN::.
The FuMa format has been widely and is still in use but is increasingly replaced by:
     ## ACN
||The Ambisonic Channel Number (ACN)[5] has reached wide consensus for future higher-order systems. See: link:: https://en.wikipedia.org/wiki/Ambisonic_data_exchange_formats#ACN::, and compare with the image from link::Tutorials/Exercise_01_HOA_b_format::. ACN channel ordering comes with N3D and SN3D normalization. See: link:: https://en.wikipedia.org/wiki/Ambisonic_data_exchange_formats#SN3D::.
::

N3D has the advantage that all signals are orthonormal.
SN3D has the advantage that none of the higher order signals exceeds the level of the W channel (ACN 0).

NOTE: This library uses internally the ACN channel ordering with N3D normalization. In order to transform and reconstruct an ambisonics soundfield correctly, you need to know what convention you are working with. The HOAConvert class is versatile but mostly meant to convert b-format recordings into ACN N3D for b-format transformations of this library and to convert back to other conventions when rendering and saving sounds for other production contexts.

The examples below show the difference of the three b-format conventions with respect to channel ordering (ACN, FuMa) and normalization (N3D, SN3D, and MaxN)


Channel numbers and names up to order 3:
table::
    ## ACN   || FuMa || name
    ##    0     || 0       || W
    ##    1     || 2       || Y
    ##    2     || 3       || Z
    ##    3     || 1       || X
    ##    4     || 8       || V
    ##    5     || 6       || T
    ##    6     || 4       || R
    ##    7     || 5       || S
    ##    8     || 7       || U
    ##    9     || 15     || Q
    ##    10   || 13     || O
    ##    11   || 11     || M
    ##    12   || 9       || K
    ##    13   || 10     || L
    ##    14   || 12     || N
    ##    15   || 14     || P
::


code::
// start the sound server
s.boot

(
// try different orders up to 5
~order = 5;
~hoaNumChannels = (~order+1).pow(2);
// make an oszilloscope showing all the channels for the order from above
s.scope(~hoaNumChannels);
)

// Let's use proxies for this:
~hoaSignal = NodeProxy.new(s, \audio, ~hoaNumChannels);
~hoaSignal.source = {HOAEncPan.ar(~order, WhiteNoise.ar(1), 45, 45 )};
~hoaSignal.fadeTime = 1;
~hoaSignal.play(0, ~hoaNumChannels);

// select in and out Format
~inFormat =;
~outFormat =;

// and evaluate the new source of the proxy
~hoaSignal.source = {HOAConvert.ar(~order,  HOAEncPan.ar(~order, WhiteNoise.ar(1), 45, 45 ), ~inFormat, ~outFormat)}
::
