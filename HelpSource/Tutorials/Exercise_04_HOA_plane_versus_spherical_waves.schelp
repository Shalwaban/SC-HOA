title:: HOA Tutorial Exercise 04
summary:: Plane versus spherical wave encoding.
categories:: Libraries>HOA
related:: Guides/HOAguide, Guides/HOAguide


STRONG:: Previous:::
link::Tutorials/Exercise_03_HOA_decoding_for_monitoring::

STRONG:: Next:::
link::Tutorials/Exercise_05_HOA_b_format_file_playback::


The examples below demonstarte the difference between plane and spherical waves.
Sperical waves apply nearfield filters to account not only for directions but also for distance of sound sources.
For the correct use of these filters, which are unstable by nature, take care about the distance parameters in the encoding and decoding step.

code::
s.quit
(
ServerOptions.devices;
s = Server.local;
Server.local = Server.default;
o = Server.local.options; // Get the local server's options
o.numInputBusChannels = 2; // Set Input to number of Inputs
o.numOutputBusChannels = 36; // lets start after chan 36 so as not to see the mic input
o.numAudioBusChannels = 2048;
o.blockSize = 512;
o.numWireBufs = 1024 * 16;
o.memSize = 2.pow(18);
o.sampleRate = 48000;
s.makeWindow;
s.boot;
)

(
~order = 4;
~hoaNumChannels = (~order+1).pow(2);
// make an oszilloscope showing all the channels for the order from above
s.scope(2);
)

// Let's make a node that generates a HOA signal ( white noise ) control the direction with the mouse.
// we won't see it since we don't monitor it.
(
~hoaSignal = NodeProxy.new(s, \audio, ~hoaNumChannels);
~hoaSignal.source = {HOAEncPan.ar(~order, WhiteNoise.ar(1), MouseX.kr(0, 360), MouseY.kr(-90, 90 ) )};
~hoaSignal.fadeTime = 1;
)

// Let's make a node that can take in (multichannel) HOA signals.
// now let's load HRIR filters for each of the 26 channels
HOADecLebedev26.loadHrirFilters(s);
HOADecLebedev26.hrirFilters.size;
(
~decoder = NodeProxy.new(s, \audio, 26);
~decoder.source = {var in; in = \in.ar(0!~hoaNumChannels); HOADecLebedev26.ar(3, in, hrir_Filters:1) };
~decoder.fadeTime = 1;
~decoder.play(0, 26);
)

// and we connect them
~hoaSignal <>> ~decoder;

// Lets change the  NodeProxies of the ~hoaSignal

~hoaSignal.source = {HOAEncPan.ar(~order, WhiteNoise.ar(1), MouseX.kr(0, 360), MouseY.kr(-90, 90 ) )};

~hoaSignal.source = {HOAEncPan.ar(~order, WhiteNoise.ar(1), MouseX.kr(0, 360), elev:0, gain:0, plane_spherical:1, radius: MouseY.kr(0, 4 ) )};

(
~hoaSignal.source = {HOAEncPan.ar(~order,
	Klang.ar(`[ [100, 201, 405, 806, 1620, 3250], {|i| (i+1).reciprocal }!6, nil ], 1, 0),
	MouseX.kr(0, 360), elev:0, gain:0, plane_spherical:1, radius: MouseY.kr(0, 4 ) )};
)
::

STRONG:: Previous:::
link::Tutorials/Exercise_03_HOA_decoding_for_monitoring::

STRONG:: Next:::
link::Tutorials/Exercise_05_HOA_b_format_file_playback::
