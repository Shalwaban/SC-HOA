title:: HOA Tutorial Exercise 01
summary:: Creating spatialized sounds in HOA b-format.
categories:: Libraries>HOA
related:: Guides/HOAguide, Guides/HOAguide


The code examples below show how to generate b-format signals and how to monitor them in the oscilloscope.
A given order n  results in (n+1)^2 channels in the b-format.


table::
    ##  order   || channels
    ##    1       ||   4
    ##    2       ||   9
    ##    3       ||   16
    ##    4       ||   25
    ##    5       ||   36
::


image::foo.png# Spherical Harmonics up to degree 5, as used in fifth-order, Image made by Dr. Franz Zotter, taken from Wikipedia # link::https://en.wikipedia.org/wiki/Ambisonic_data_exchange_formats#Prerequisites_for_successful_data_exchange::.::

code::
// start the sound server
s.boot

(
// try different orders up to 5
~order = 4;
~hoaNumChannels = (~order+1).pow(2);
// make an oszilloscope showing all the channels for the order from above
s.scope(~hoaNumChannels);
)


// Let's try some white noise first
// sounds only in the x y plane, observe constant signal in channel 1
// varying signal in channel 2 (x) and 4 (y), 3 is silent.
{HOAEncPan.ar(~order, WhiteNoise.ar(1), MouseX.kr(0, 360), 0 )}.play;

// sounds only in the z direction (fixed in the x,y plane)
{HOAEncPan.ar(~order, WhiteNoise.ar(1), 0, MouseY.kr(-90, 90 ) )}.play;

// move sounds in x,y,z with the mouse
{HOAEncPan.ar(~order, WhiteNoise.ar(1), MouseX.kr(0, 360), MouseY.kr(-90, 90 ) )}.play;


// Now the same with a very slow Sine wave
// so that we can observe the phase relations in the channles, compare with the spherical harmonics from above
// chose a freq so that the scope stands still (only if you keep the default zoom value of 1 @ 44100)
~freq = 44100 / 1024;
// change direction in the x y plane
{HOAEncPan.ar(~order, SinOsc.ar(~freq ), MouseX.kr(0, 360), 0 )}.play;

// change only the z direction, fix in x,y
{HOAEncPan.ar(~order, SinOsc.ar(~freq ), 0, MouseY.kr(-90, 90 ) )}.play;

// move sound direction in x,y,z with the mouse
{HOAEncPan.ar(~order, SinOsc.ar(~freq ), MouseX.kr(0, 360), MouseY.kr(-90, 90 ) )}.play;
::


